// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(cuid())
  email String @unique
  name  String
  role  String // "admin" or "member"
  passwordHash String?
  meetings   Meeting[] @relation("OrganizerMeetings")
}

model Meeting {
  id                String           @id @default(cuid())
  title             String
  date              DateTime
  duration          Int
  participants      String // Comma-separated list of emails
  description       String?
  organizer         User             @relation("OrganizerMeetings", fields: [organizerId], references: [id])
  organizerId       String
  // Zoom Meeting Information
  zoomMeetingId     String?          @unique
  zoomJoinUrl       String?
  zoomStartUrl      String?
  zoomPassword      String?
  // Relation to the Zoom account used for this meeting
  zoomCredential    ZoomCredentials? @relation("CredentialMeetings", fields: [zoomCredentialId], references: [id])
  zoomCredentialId  String?
}

model ZoomCredentials {
  id           String    @id @default(cuid())
  clientId     String    @unique // S2S OAuth App Client ID
  clientSecret String // S2S OAuth App Client Secret
  accountId    String // Account ID used for authentication, not to be confused with User ID for API operations
  hostKey      String? // Host key for claiming host in Zoom meetings
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  meetings     Meeting[] @relation("CredentialMeetings")
}

model Settings {
  id              String   @id @default(cuid())
  allowRegistration Boolean @default(true)
  defaultRole     String   @default("member")
  updatedAt       DateTime @updatedAt
}
